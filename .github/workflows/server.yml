name: Build and Push for Server

on:
  push:
    branches:
      - master
      - develop
  pull_request:
    branches:
      - master
      - develop

env:
  DIST_DIR: server
  TARGET_DIR: server
  IMAGE_NAME: server
  DOCKER_FILE: Dockerfile
  DOCKER_REGISTRY: docker.pkg.github.com

jobs:
  prepare:
    # バージョン管理に含めていないファイルを補完
    name: Prepare to build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Add secrets file
        run: |
          cat <<EOL > ./$TARGET_DIR/settings.conf
          ${{ secrets.SERVER_SETTINGS }}
          EOL

      - name: Upload result for next job
        uses: actions/upload-artifact@v1
        with:
          name: ${{ env.DIST_DIR }}
          path: ${{ env.TARGET_DIR }}

  push:
    # ソースコード一式を Docker コンテナーに封入して GitHub Packages にプッシュする
    name: Push docker image to GitHub Packages
    runs-on: ubuntu-latest
    needs: prepare

    steps:
      - name: Download result from previous job
        uses: actions/download-artifact@v1
        with:
          name: ${{ env.DIST_DIR }}

      - name: Login registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login $DOCKER_REGISTRY -u ${{ github.actor }} --password-stdin

      - name: Build image
        working-directory: ${{ env.TARGET_DIR }}
        run: docker build --file $DOCKER_FILE --tag $IMAGE_NAME .

      - name: Push image
        run: |
          IMAGE_ID=$DOCKER_REGISTRY/${{ github.repository }}/$IMAGE_NAME
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          IMAGE_VERSION=latest

          echo "IMAGE_ID:" $IMAGE_ID
          echo "IMAGE_VERSION:" =$IMAGE_VERSION

          docker tag $IMAGE_NAME $IMAGE_ID:$IMAGE_VERSION
          docker push $IMAGE_ID:$IMAGE_VERSION

  deploy:
    # GitHub Packages にプッシュした最新のイメージをデプロイ先に通知する
    name: Deploy image
    runs-on: ubuntu-latest
    needs: push

    steps:
      # 開発用
      - name: Send HTTP-POST to Webhook-URL for Develop
        if: github.ref != 'refs/heads/master'
        run: curl -X POST -L ${{ secrets.SERVER_DEVELOP_DOCKER_WEBHOOK_URL }}

      # 本番用
      - name: Send HTTP-POST to Webhook-URL for Production
        if: github.ref == 'refs/heads/master'
        run: curl -X POST -L ${{ secrets.SERVER_PRODUCTION_DOCKER_WEBHOOK_URL }}
